from pyrogram import filters
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from SHUKLAMUSIC import app
from config import BOT_USERNAME
from SHUKLAMUSIC.utils.errors import capture_err
import httpx 
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup

start_txt = """**
‚¶ø ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥Ä·¥Ä Ä·¥ú·¥ç…™ ·¥ç·¥ús…™·¥Ñ  Ä·¥á·¥ò·¥ès 
 
 ‚û≤ ·¥Ä ü ü  Ä·¥á·¥ò·¥è ·¥á·¥Äs…™ ü è ·¥Ö·¥á·¥ò ü·¥è è ·¥è…¥  ú·¥á Ä·¥è·¥ã·¥ú ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ä…¥ è ·¥á Ä Ä·¥è Ä ‚ú∞
 
 ‚û≤ …¥·¥è  ú·¥á Ä·¥è·¥ã·¥ú  ô·¥Ä…¥ …™ss·¥ú·¥á ‚ú∞
 
 ‚û≤ …¥·¥è …™·¥Ö  ô·¥Ä…¥ …™ss·¥ú·¥á ‚ú∞
 
 ‚û≤ ·¥ú…¥ ü…™·¥ç…™·¥õ·¥á·¥Ö ·¥Ö è…¥·¥ès ‚ú∞
 
 ‚û≤  Ä·¥ú…¥ 24x7  ü·¥Ä…¢ “ì Ä·¥á·¥á ·¥°…™·¥õ ú·¥è·¥ú·¥õ s·¥õ·¥è·¥ò ‚ú∞
 
 ‚ñ∫ …™“ì  è·¥è·¥ú “ì·¥Ä·¥Ñ·¥á ·¥Ä…¥ è ·¥ò Ä·¥è ô ü·¥á·¥ç ·¥õ ú·¥á…¥ s·¥á…¥·¥Ö ss
**"""




@app.on_message(filters.command("repo"))
async def start(_, msg):
    buttons = [
        [ 
          InlineKeyboardButton("·¥Ä·¥Ö·¥Ö ·¥ç·¥á  ô·¥Ä ô è ", url=f"https://t.me/{BOT_USERNAME}?startgroup=true")
        ],
        [
          InlineKeyboardButton("s·¥ú·¥ò·¥ò·¥è Ä·¥õ", url="https://t.me/AarumiBots"),
          InlineKeyboardButton("·¥è·¥°…¥·¥á Ä", url="https://t.me/Swagger_Soul"),
          ],
               [
                InlineKeyboardButton("·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/AarumiBots"),

],
[
              InlineKeyboardButton("·¥ç·¥ús…™·¥Ñ  ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
              InlineKeyboardButton("Ô∏év2 ·¥ç·¥ús…™·¥Ñ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
              ],
              [
              InlineKeyboardButton("·¥†1 ·¥ç·¥ús…™·¥Ñ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
InlineKeyboardButton("c ú·¥Ä·¥õ ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
],
[
InlineKeyboardButton("s·¥õ Ä…™…¥…¢ ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
InlineKeyboardButton("·¥ç·¥Ä…¥·¥Ä…¢·¥á·¥ç·¥á…¥·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
],
[
              InlineKeyboardButton("s·¥ò·¥Ä·¥ç  ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
              InlineKeyboardButton(" ô·¥Ä…¥-·¥Ä ü ü 10  ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
              ],
              [
              InlineKeyboardButton("s·¥õ Ä…™…¥…¢  ú·¥Ä·¥Ñ·¥ã", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
InlineKeyboardButton("…™·¥Ö ·¥Ñ ú·¥Ä·¥õ  ô·¥è·¥õ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),
],
[
InlineKeyboardButton("·¥ús·¥á Ä ô·¥è·¥õ", url=f"https://github.com/itzshukla/STRANGER-USERBOT3.0/fork"),
InlineKeyboardButton("…™·¥Ö-·¥ús·¥á Ä ô·¥è·¥õ", url=f"https://t.me/Swagger_Soul"),
],
[
InlineKeyboardButton("s·¥ú·¥ò·¥á Ä-·¥ç·¥ús…™·¥Ñ", url=f"https://github.com/EgoBots/EGO-MUSIC/fork"),

        ]]
    
    reply_markup = InlineKeyboardMarkup(buttons)
    
    await msg.reply_photo(
        photo="https://files.catbox.moe/1dv6g2.jpg",
        caption=start_txt,
        reply_markup=reply_markup
    )
 
   
# --------------


@app.on_message(filters.command("repo", prefixes="#"))
@capture_err
async def repo(_, message):
    async with httpx.AsyncClient() as client:
        response = await client.get("https://api.github.com/repos/EgoBots/EGO-MUSIC/contributors")
    
    if response.status_code == 200:
        users = response.json()
        list_of_users = ""
        count = 1
        for user in users:
            list_of_users += f"{count}. [{user['login']}]({user['html_url']})\n"
            count += 1

        text = f"""[ùñ±ùñ§ùñØùñÆ ùñ´ùñ®ùñ≠ùñ™](https://github.com/EgoBots/EGO-MUSIC) | [UPDATES](https://t.me/AarumiBots)
| ùñ¢ùñÆùñ≠ùñ≥ùñ±ùñ®ùñ°ùñ¥ùñ≥ùñÆùñ±ùñ≤ |
----------------
{list_of_users}"""
        await app.send_message(message.chat.id, text=text, disable_web_page_preview=True)
    else:
        await app.send_message(message.chat.id, text="Failed to fetch contributors.")


